/// Root layout holding Drawer + AppBar + TabBar + BottomNavigationBar
class MainLayout extends StatefulWidget {
  const MainLayout({super.key});

  @override
  State<MainLayout> createState() => _MainLayoutState();
}

class _MainLayoutState extends State<MainLayout> with TickerProviderStateMixin {
  late final TabController _tabController;
  int _currentNavIndex = 0;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 3, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  // Pages for bottom navigation
  final List<Widget> _navPages = [];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // Drawer
      drawer: _buildDrawer(context),

      // AppBar with TabBar
      appBar: AppBar(
        title: const Text(
          'Naruto Uzumaki',
          style: TextStyle(fontWeight: FontWeight.bold),
        ),
        // action
        actions: <Widget>[
          IconButton(
            // color: Colors.white,
            icon: const Icon(Icons.person_2_outlined),
            tooltip: 'Open shopping cart',
            onPressed: () {
              // handle the press
            },
          ),
        ],
        bottom: TabBar(
          controller: _tabController,
          tabs: const <Widget>[
            Tab(icon: Icon(Icons.send_and_archive_outlined)),
            Tab(icon: Icon(Icons.account_balance_wallet_outlined)),
            Tab(icon: Icon(Icons.settings)),
          ],
        ),
      ),

      // Bottom NavigationBar
      bottomNavigationBar: NavigationBar(
        selectedIndex: _currentNavIndex,
        onDestinationSelected: (index) {
          setState(() {
            _currentNavIndex = index;
          });
        },
        destinations: const [
          NavigationDestination(
            icon: Icon(Icons.home_outlined, size: 28),
            selectedIcon: Icon(Icons.home),
            label: "Home",
          ),
          NavigationDestination(
            icon: Icon(Icons.notifications_none, size: 28),
            label: "Notifications",
          ),
          NavigationDestination(
            icon: Icon(Icons.message_outlined, size: 28),
            label: "Messages",
          ),
        ],
      ),

      // Body combines TabBarView + current bottom nav page
      body: IndexedStack(
        index: _currentNavIndex,
        children: [
          HomePage(tabController: _tabController),
          const NotificationsPage(),
          const MessagesPage(),
        ],
      ),
    );
  }

  // drawer
  Drawer _buildDrawer(BuildContext context) {
    return Drawer(
      elevation: 8.0,
      child: ListView(
        padding: EdgeInsets.zero,
        children: [
          // Drawer header
          UserAccountsDrawerHeader(
            accountName: const Text("Jeremiah F Alfred"),
            accountEmail: const Text("Jeremiah.alfred@gtbank.com"),
            currentAccountPicture: const CircleAvatar(
              backgroundColor: Colors.white,
              child: Icon(Icons.person, size: 40, color: Colors.black),
            ),
            decoration: const BoxDecoration(color: Colors.teal),
          ),

          // Drawer items
          ListTile(
            leading: const Icon(Icons.home_work),
            title: const Text("Home"),
            onTap: () {
              Navigator.pop(context); // close drawer
              // Navigate to home page logic here
            },
          ),
          ListTile(
            leading: const Icon(Icons.message),
            title: const Text("Message"),
            onTap: () {
              Navigator.pop(context); // close drawer
              // Navigate to home page logic here
            },
          ),
          ListTile(
            leading: const Icon(Icons.send),
            title: const Text("Transfer"),
            onTap: () {
              Navigator.pop(context); // close drawer
              // Navigate to home page logic here
            },
          ),
          ListTile(
            leading: const Icon(Icons.today),
            title: const Text("Task"),
            onTap: () {
              Navigator.pop(context); // close drawer
              // Navigate to home page logic here
            },
          ),
          ListTile(
            leading: const Icon(Icons.settings),
            title: const Text("Settings"),
            onTap: () {
              Navigator.pop(context); // close drawer
              // Navigate to settings
            },
          ),
          ListTile(
            leading: const Icon(Icons.info),
            title: const Text("About"),
            onTap: () {
              Navigator.pop(context);
              // Navigate to about page
            },
          ),
          const Divider(),
          ListTile(
            leading: const Icon(Icons.logout, color: Colors.red),
            title: const Text("Logout"),
            onTap: () {
              Navigator.pop(context);
              // Handle logout logic
            },
          ),
        ],
      ),
    );
  }
}

// Homepage
class HomePage extends StatelessWidget {
  final TabController tabController;
  const HomePage({super.key, required this.tabController});

  @override
  Widget build(BuildContext context) {
    return TabBarView(
      controller: tabController,
      children: const [
        Center(child: Text("Transactions histories here")),
        Center(child: Text("Account wallets here")),
        Center(child: Text("Settings page here")),
      ],
    );
  }
}